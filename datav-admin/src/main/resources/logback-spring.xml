<?xml version="1.0" encoding="UTF-8"?>
<!-- 日志级别从低到高分为TRACE < DEBUG < INFO < WARN < ERROR < FATAL，如果设置为WARN，则低于WARN的信息都不会输出 -->
<!-- scan:当此属性设置为true时，配置文档如果发生改变，将会被重新加载，默认值为true -->
<!-- scanPeriod:设置监测配置文档是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 -->
<!-- debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration>
  <property name="LOG_PATH" value="${APP_HOME:-.}/../logs" />
  <!-- 引用公共配置 -->
  <include resource="org/springframework/boot/logging/logback/defaults.xml" />
  <conversionRule conversionWord="ip" converterClass="com.longfor.datav.common.utils.IPAddressConverter" />
  <conversionRule conversionWord="module" converterClass="com.longfor.datav.common.utils.ModuleConverter" />
  <springProperty scope="context" name="spring_application_name" source="spring.application.name" />
  <springProperty scope="context" name="server_port" source="server.port"/>
  <!-- 彩色日志格式,格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
  <!--下面格式为固定格式，如果没有那就是||中间的|必须要有 -->
  <!-- appID | module |  dateTime | level | requestID | traceID | requestIP | userIP | serverIP | serverPort | processID | thread | location | detailInfo-->
  <property name="CONSOLE_LOG_PATTERN" value="%clr(${spring_application_name}){cyan}|%X{module}|%clr(%d{ISO8601}){faint}|%clr(%p)|%X{requestId}|%X{traceId}|%X{requestIp}|%X{userIp}|%ip|${server_port}|${PID}|%clr(%t){faint}|%clr(%.40logger{39}){cyan}.%clr(%method){cyan}:%L|%m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>
  <property name="FILE_LOG_PATTERN"   value="${spring_application_name}|%X{module}|%d{ISO8601}|%p|%X{requestId}|%X{traceId}|%X{requestIp}|%X{userIp}|%ip|${server_port}|${PID}|%t|%.40logger{39}.%method:%L|%m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>

  <!--1. 输出到控制台上，改变了springboot默认的日志样式    由class决定当前配置是谁的-->
  <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <Pattern>${FILE_LOG_PATTERN}</Pattern>
      <!-- 设置字符集 -->
      <charset>UTF-8</charset>
    </encoder>
  </appender>

  <!-- 输出到文档，时间滚动输出  由class决定当前配置是谁的-->
  <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <File>log/datav.log</File>
    <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!-- 日志归档 -->
      <fileNamePattern>log/datav.%d{yyyyMMdd}.log.gz</fileNamePattern>
      <!--日志文档保留天数-->
      <maxHistory>30</maxHistory>
    </rollingPolicy>

    <!--日志文档输出格式-->
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <pattern>${FILE_LOG_PATTERN}</pattern>
    </encoder>
  </appender>

  <!-- 错误日志：用于将错误日志输出到独立文件 -->
  <appender name="ERROR"  class="ch.qos.logback.core.rolling.RollingFileAppender">
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>log/error.%d{yyyyMMdd}.log</fileNamePattern>
      <maxHistory>15</maxHistory>
    </rollingPolicy>
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <pattern>${FILE_LOG_PATTERN}</pattern>
    </encoder>
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>ERROR</level>
    </filter>
  </appender>
  <jmxConfigurator />

  <!-- 开发环境-->
  <springProfile name="dev">
    <logger name="com.longfor.datav.dao.mapper" level="DEBUG"/>
    <logger name="com.longfor" level="DEBUG" />
    <root level="INFO">
      <appender-ref ref="CONSOLE" />
<!--      <appender-ref ref="FILE" />-->
<!--      <appender-ref ref="ERROR" />-->
    </root>
  </springProfile>

  <!-- 测试环境-->
  <springProfile name="uat">
    <logger name="com.longfor.datav.dao.mapper" level="DEBUG"/>
    <logger name="com.longfor" level="DEBUG" />
    <root level="INFO">
      <appender-ref ref="CONSOLE" />
      <appender-ref ref="FILE" />
      <appender-ref ref="ERROR" />
    </root>
  </springProfile>

  <!-- 生产环境 -->
  <springProfile name="prod">
<!--    <logger name="com.longfor.datav.dao.mapper" level="DEBUG" />-->
    <logger name="com.longfor" level="INFO" />
    <root level="INFO">
      <appender-ref ref="CONSOLE" />
<!--      <appender-ref ref="FILE" />-->
<!--      <appender-ref ref="ERROR" />-->
    </root>
  </springProfile>
</configuration>